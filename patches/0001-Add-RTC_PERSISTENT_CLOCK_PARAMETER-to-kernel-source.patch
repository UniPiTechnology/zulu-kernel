From 62b58dadfc71dc894808fd7110f6c3ed5d67a6c3 Mon Sep 17 00:00:00 2001
From: Miroslav Ondra <ondra@faster.cz>
Date: Thu, 9 Sep 2021 20:02:29 +0200
Subject: [PATCH 01/12] Add RTC_PERSISTENT_CLOCK_PARAMETER to kernel source

---
 drivers/rtc/Kconfig                  |  8 +++++++
 drivers/rtc/Makefile                 |  1 +
 drivers/rtc/persistent-clock-param.c | 34 ++++++++++++++++++++++++++++
 3 files changed, 43 insertions(+)
 create mode 100644 drivers/rtc/persistent-clock-param.c

diff --git a/drivers/rtc/Kconfig b/drivers/rtc/Kconfig
index 4b6b0f187..4f4a775cc 100644
--- a/drivers/rtc/Kconfig
+++ b/drivers/rtc/Kconfig
@@ -6,6 +6,14 @@
 config RTC_LIB
 	bool
 
+config RTC_PERSISTENT_CLOCK_PARAMETER
+	bool "Set persistent clock from boot-time parameter"
+	help
+	  Say y here to enable setting first kernel clock value from kernel
+	  boot prameter "persistentclock=".
+	  Boot parameter can be set during U-boot by reading it from rtc.
+	  If unsure, say N.
+
 config RTC_MC146818_LIB
 	bool
 	select RTC_LIB
diff --git a/drivers/rtc/Makefile b/drivers/rtc/Makefile
index 958cadb14..222a84905 100644
--- a/drivers/rtc/Makefile
+++ b/drivers/rtc/Makefile
@@ -181,3 +181,4 @@ obj-$(CONFIG_RTC_DRV_WM8350)	+= rtc-wm8350.o
 obj-$(CONFIG_RTC_DRV_X1205)	+= rtc-x1205.o
 obj-$(CONFIG_RTC_DRV_XGENE)	+= rtc-xgene.o
 obj-$(CONFIG_RTC_DRV_ZYNQMP)	+= rtc-zynqmp.o
+obj-$(CONFIG_RTC_PERSISTENT_CLOCK_PARAMETER) += persistent-clock-param.o
diff --git a/drivers/rtc/persistent-clock-param.c b/drivers/rtc/persistent-clock-param.c
new file mode 100644
index 000000000..917ea7cf5
--- /dev/null
+++ b/drivers/rtc/persistent-clock-param.c
@@ -0,0 +1,34 @@
+// SPDX-License-Identifier: GPL-2.0-only
+/*
+ *
+ * Copyright (C) 2020 Miroslav Ondra
+ */
+
+#include <linux/kernel.h>
+#include <linux/time64.h>
+#include <linux/init.h>
+#include <linux/errno.h>
+
+
+struct timespec64 ts_parameter = {0, 0};
+
+void read_persistent_clock64(struct timespec64 *ts)
+{
+	ts->tv_sec = ts_parameter.tv_sec;
+	ts->tv_nsec = ts_parameter.tv_nsec;
+}
+
+
+static int __init read_persistent_clock_parameter(char *str)
+{
+    int startsec;
+
+    if (get_option(&str, &startsec)) {
+        ts_parameter.tv_sec = startsec;
+        return 0;
+    }
+
+    return -EINVAL;
+}
+
+early_param("persistentclock", read_persistent_clock_parameter);
-- 
2.20.1


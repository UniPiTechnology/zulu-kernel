#!/bin/sh

# install kernel header files 

[ -z "$1" ] && { echo "Kernel version needed!" >&2; exit 1; }

version=${1}
kernel_headers_dir=${2-debian/unipi-kernel-headers}
KCONFIG_CONFIG=.config
SRCARCH=${ARCH-arm64}
srctree=${PWD}
objtree=${PWD}

hdrsrcfiles=$objtree/debian/.srcfiles
hdrobjfiles=$objtree/debian/.objfiles


(cd $srctree
  find . -name Makefile\* -o -name Kconfig\* -o -name \*.pl
  find arch/*/include include scripts -type f -o -type l
  find arch/$SRCARCH -name module.lds -o -name Kbuild.platforms -o -name Platform
  find $(find arch/$SRCARCH -name include -o -name scripts -type d) -type f
) > "${hdrsrcfiles}"

(cd $objtree
  grep -q '^CONFIG_STACK_VALIDATION=y' $KCONFIG_CONFIG && tools/objtool -type f -executable
  find arch/$SRCARCH/include Module.symvers include scripts -type f
  grep -q '^CONFIG_GCC_PLUGINS=y' $KCONFIG_CONFIG && find scripts/gcc-plugins -name \*.so -o -name gcc-common.h
)  > "${hdrobjfiles}"

destdir=$kernel_headers_dir/usr/src/linux-headers-$version
mkdir -p "$destdir"
cat "${hdrsrcfiles}" | (cd $srctree;  tar -c -f - -T -) | (cd $destdir; tar -xf -)
cat "${hdrobjfiles}" | (cd $objtree; tar -c -f - -T -)  | (cd $destdir; tar -xf -)
cp $objtree/$KCONFIG_CONFIG $destdir/.config 
mkdir -p $kernel_headers_dir/lib/modules/$version
ln -sf "/usr/src/linux-headers-$version" "$kernel_headers_dir/lib/modules/$version/build"
rm -f "${hdrsrcfiles}"  "${hdrobjfiles}"
